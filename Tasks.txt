Tasks (TO DO)

- Aplicar e aprofundar tudo o que aprendeu no projeto anterior.
- Entender as necessidades dos usuários para quem será desenvolvido o produto e cujas necessidades ajudará a resolver.
- Colocar à prova sua criatividade para ter ideias que levem à uma solução original e valiosa para o problema.
- Contar com o apoio de suas colegas, trabalhando em grupo e buscando feedback constante.
- Definir como criar sua própria estrutura de dados e de que forma serão exibidos no produto.

Requisitos:

0.0.1. Login com Firebase
-Para o login e as publicações na timeline você deverá utilizar Firebase
-Autenticação com Facebook, Google ou e-mail.

0.0.2. Validações:
-Não pode haver usuários repetidos.
-A conta do usuário deverá ter um e-mail válido.
-O texto no input de senha deverá ser secreta.

0.0.3. Comportamento:
-Os formulários de registro ou início de sessão deverão ser validados no envio.
-Em caso de erros, o sistema deve fornecer mensagens de erro para o usuário, para ajudá-lo a corrigir.
-A aplicação só deve permitir o acesso a usuários com contas válidas.
-Ao recarregar a aplicação, deve-se verificar que o usuário está logado antes de exibir conteúdo privado.

0.0.4. Perspectiva da interface: Ver exemplo no README

0.0.5. Timeline da rede social Validações:
-Ao clicar no botão de publicação, deve-se validar o conteúdo no input.

0.0.6. Timeline da rede social Comportamento:
-Poder publicar um post de texto.
-Poder dar like em um post.
-Exibir um contador de likes.
-Poder apagar um post específico.
-Poder filtrar posts públicos e posts somente para amigos.
-Pedir confirmação antes de eliminar um post.
-Ao clicar no botão editar, deve-se mudar o texto para um campo input que permita editar o texto.
-Ao clicar em salvar, a exibição deve voltar a um texto normal, porém com a informação editada.
-Ao recarregar a página, deve exibir as informação editadas/atualizadas.

0.0.7. Perspectiva da interface: Ver exemplo no README

Outras considerações
A aplicação não deve permitir a publicação de campos vazios de nenhum tipo.
O usuário deve poder adicionar, editar ou apagar conteúdo de seu perfil na rede social
O usuário poderá definir a privacidade do que publica.
Ao editar conteúdo, o que foi editado deve ser vizualizado automaticamente, imediatamente depois de salvar.
Ao recarregar a página, deve-se exibir os conteúdos editados/atualizados.

Hacker edition

Criar posts com imagens.
Permitir adicionar amigos.
Permitir cancelar amigos.
Permitir o compartilhamento de posts (no Twitter chamamos de RT/retweet, no Facebook de compartilhamento).
Permitir comentários ou respostas a uma publicação.
Permitir perfis editáveis.
Permitir a visualização de perfil ou da timeline ou de uma lista de publicações.

Referencias:

https://stackoverflow.com/questions/42040014/firebase-create-user-without-sign-in

https://nordicapis.com/what-is-the-difference-between-an-api-and-an-sdk/

http://bluebirdjs.com/docs/api-reference.html

"Promise é um objeto usado para processamento assíncrono. Um Promise (de "promessa") representa um valor que pode estar disponível agora, no futuro ou nunca."
https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise
promisses conceito do Javascript , exemplo posso usar promisses para acessas o BD pois
pode demorar

